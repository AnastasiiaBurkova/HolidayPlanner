{"ast":null,"code":"var _jsxFileName = \"/Users/aburkova/Code/Task/HolidayPlanner/src/main/ui/src/Planner.js\";\nimport React, { useEffect, useState } from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from \"axios\";\nimport { TextField } from \"@material-ui/core\";\nimport Select from 'react-select';\nimport countryList from \"react-select-country-list\";\nexport default function Planner(props) {\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [country, setCountry] = useState(null);\n  const [holiday, setHolidays] = useState(\"\");\n  const [result, setResult] = useState(\"\");\n  const [displayResult, setDisplayResult] = useState(false);\n  const options = countryList().getData();\n\n  const changeHandler = country => {\n    console.log(\"country \", country);\n    setCountry(country);\n  };\n\n  const sendData = () => {\n    if (startDate && endDate && country) {\n      axios.post(\"http://localhost:8080/api/dates?startDate=\" + startDate + \"&endDate=\" + endDate + \"&country=\" + country.value, {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"*\",\n          \"Access-Control-Allow-Headers\": \"*\",\n          \"Content-Type\": \"application/text\"\n        }\n      }).then(response => {\n        console.log(\"response \", response);\n        setHolidays(response.data);\n      }).catch(function (error) {\n        console.log(\"error\", error);\n      });\n    } else {\n      console.log(\"Some required params are missing!\");\n    }\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    sendData();\n    setDisplayResult(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    options: options,\n    style: style => ({ ...style,\n      paddingBottom: 100\n    }),\n    theme: theme => ({ ...theme,\n      maxWidth: 100,\n      colors: { ...theme.colors,\n        primary25: 'hotpink',\n        primary: 'black'\n      }\n    }),\n    value: country,\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    type: \"date\",\n    defaultValue: startDate,\n    onChange: e => setStartDate(e.target.value),\n    inputProps: {\n      min: \"2020-04-01\",\n      max: \"2021-03-31\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    type: \"date\",\n    defaultValue: endDate,\n    onChange: e => setEndDate(e.target.value),\n    inputProps: {\n      min: startDate,\n      max: \"2021-03-31\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Submit\")), /*#__PURE__*/React.createElement(\"text\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }, \"The person should take \", holiday, \" holiday days\"));\n}","map":{"version":3,"sources":["/Users/aburkova/Code/Task/HolidayPlanner/src/main/ui/src/Planner.js"],"names":["React","useEffect","useState","axios","TextField","Select","countryList","Planner","props","startDate","setStartDate","endDate","setEndDate","country","setCountry","holiday","setHolidays","result","setResult","displayResult","setDisplayResult","options","getData","changeHandler","console","log","sendData","post","value","headers","then","response","data","catch","error","onSubmit","event","preventDefault","style","paddingBottom","theme","maxWidth","colors","primary25","primary","e","target","min","max"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from \"axios\";\nimport { TextField } from \"@material-ui/core\";\nimport Select from 'react-select';\nimport countryList from \"react-select-country-list\";\n\nexport default function Planner(props) {\n    const [startDate, setStartDate] = useState(null);\n    const [endDate, setEndDate] = useState(null);\n    const [country, setCountry] = useState(null);\n    const [holiday, setHolidays] = useState(\"\");\n    const [result, setResult] = useState(\"\");\n    const [displayResult, setDisplayResult] = useState(false);\n\n    const options = countryList().getData();\n\n\n    const changeHandler = country => {\n        console.log(\"country \", country);\n        setCountry(country)\n    };\n\n    const sendData = () => {\n        if (startDate && endDate && country) {\n\n        axios\n        .post(\n        \"http://localhost:8080/api/dates?startDate=\" +\n        startDate +\n        \"&endDate=\" +\n        endDate + \"&country=\" + country.value,\n        {\n            headers: {\n                \"Access-Control-Allow-Origin\": \"*\",\n                \"Access-Control-Allow-Methods\": \"*\",\n                \"Access-Control-Allow-Headers\": \"*\",\n                \"Content-Type\": \"application/text\",\n            },\n        }\n        )\n        .then((response) => {\n\n            console.log(\"response \", response);\n            setHolidays(response.data);\n        })\n        .catch(function (error) {\n            console.log(\"error\", error);\n        });\n        }\n        else {\n            console.log(\"Some required params are missing!\");\n        }\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        sendData();\n        setDisplayResult(true);\n\n    };\n\n    return (\n    <div>\n        <form onSubmit={onSubmit}>\n            <Select\n            options={options}\n            style={style => ({\n                ...style,\n                paddingBottom: 100\n            })}\n            theme={theme => ({\n                ...theme,\n                maxWidth: 100,\n                colors: {\n                    ...theme.colors,\n                    primary25: 'hotpink',\n                    primary: 'black',\n                },\n            })}\n            value={country}\n            onChange={changeHandler}\n            />\n            <TextField\n            type=\"date\"\n            defaultValue={startDate}\n            onChange={(e) => setStartDate(e.target.value)}\n            inputProps={{ min: \"2020-04-01\", max: \"2021-03-31\" }}\n            />\n            <TextField\n            type=\"date\"\n            defaultValue={endDate}\n            onChange={(e) => setEndDate(e.target.value)}\n            inputProps={{ min: startDate, max: \"2021-03-31\" }}\n            />\n            <button>Submit</button>\n        </form>\n        <text>The person should take {holiday} holiday days</text>\n    </div>\n    );\n}\n\n\n\n"]},"metadata":{},"sourceType":"module"}