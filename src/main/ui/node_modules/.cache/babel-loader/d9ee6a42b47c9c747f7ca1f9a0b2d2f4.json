{"ast":null,"code":"var _jsxFileName = \"/Users/aburkova/Code/Task/HolidayPlanner/src/main/ui/src/Planner.js\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField } from \"@material-ui/core\";\nimport Select from \"react-select\";\nimport countryList from \"react-select-country-list\";\nexport default function Planner() {\n  const [startDate, setStartDate] = useState(null);\n  const [endDate, setEndDate] = useState(null);\n  const [country, setCountry] = useState(null);\n  const [holiday, setHolidays] = useState(\"\");\n  const [displayResult, setDisplayResult] = useState(false);\n  const options = countryList().getData();\n  const select = {\n    option: provided => ({ ...provided,\n      padding: 20\n    }),\n    control: () => ({\n      width: 263\n    })\n  };\n\n  const changeHandler = country => {\n    setCountry(country);\n  };\n\n  const sendData = () => {\n    if (startDate && endDate && country) {\n      axios.post(\"http://localhost:8080/api/dates?startDate=\" + startDate + \"&endDate=\" + endDate + \"&country=\" + country.value, {\n        headers: {\n          \"Access-Control-Allow-Origin\": \"*\",\n          \"Access-Control-Allow-Methods\": \"*\",\n          \"Access-Control-Allow-Headers\": \"*\",\n          \"Content-Type\": \"application/text\"\n        }\n      }).then(response => {\n        setHolidays(response.data);\n      }).catch(function (error) {\n        console.log(\"error\", error);\n      });\n    } else {\n      console.log(\"Some required params are missing!\");\n    }\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    sendData();\n    setDisplayResult(true);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    styles: select,\n    options: options,\n    value: country,\n    placeholder: \"Select Country\",\n    onChange: changeHandler,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    type: \"date\",\n    defaultValue: startDate,\n    onChange: e => setStartDate(e.target.value),\n    inputProps: {\n      min: \"2020-04-01\",\n      max: \"2021-03-31\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(TextField, {\n    type: \"date\",\n    defaultValue: endDate,\n    onChange: e => setEndDate(e.target.value),\n    inputProps: {\n      min: startDate,\n      max: \"2021-03-31\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    style: {\n      width: 150\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 17\n    }\n  }, \"Submit\")), displayResult && /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 33\n    }\n  }, \"The person should take \", holiday, \" holiday days\"));\n}","map":{"version":3,"sources":["/Users/aburkova/Code/Task/HolidayPlanner/src/main/ui/src/Planner.js"],"names":["React","useState","axios","TextField","Select","countryList","Planner","startDate","setStartDate","endDate","setEndDate","country","setCountry","holiday","setHolidays","displayResult","setDisplayResult","options","getData","select","option","provided","padding","control","width","changeHandler","sendData","post","value","headers","then","response","data","catch","error","console","log","onSubmit","event","preventDefault","e","target","min","max"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,mBAA1B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,WAAP,MAAwB,2BAAxB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAC9B,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,IAAD,CAA1C;AACA,QAAM,CAACQ,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACU,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,CAAC,IAAD,CAAtC;AACA,QAAM,CAACY,OAAD,EAAUC,WAAV,IAAyBb,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACc,aAAD,EAAgBC,gBAAhB,IAAoCf,QAAQ,CAAC,KAAD,CAAlD;AAEA,QAAMgB,OAAO,GAAGZ,WAAW,GAAGa,OAAd,EAAhB;AAEA,QAAMC,MAAM,GAAG;AACXC,IAAAA,MAAM,EAAGC,QAAD,KAAe,EACnB,GAAGA,QADgB;AAEnBC,MAAAA,OAAO,EAAE;AAFU,KAAf,CADG;AAKXC,IAAAA,OAAO,EAAE,OAAO;AACZC,MAAAA,KAAK,EAAE;AADK,KAAP;AALE,GAAf;;AAUA,QAAMC,aAAa,GAAId,OAAD,IAAa;AAC/BC,IAAAA,UAAU,CAACD,OAAD,CAAV;AACH,GAFD;;AAIA,QAAMe,QAAQ,GAAG,MAAM;AACnB,QAAInB,SAAS,IAAIE,OAAb,IAAwBE,OAA5B,EAAqC;AACjCT,MAAAA,KAAK,CACAyB,IADL,CAEQ,+CACApB,SADA,GAEA,WAFA,GAGAE,OAHA,GAIA,WAJA,GAKAE,OAAO,CAACiB,KAPhB,EAQQ;AACIC,QAAAA,OAAO,EAAE;AACL,yCAA+B,GAD1B;AAEL,0CAAgC,GAF3B;AAGL,0CAAgC,GAH3B;AAIL,0BAAgB;AAJX;AADb,OARR,EAiBKC,IAjBL,CAiBWC,QAAD,IAAc;AAChBjB,QAAAA,WAAW,CAACiB,QAAQ,CAACC,IAAV,CAAX;AACH,OAnBL,EAoBKC,KApBL,CAoBW,UAAUC,KAAV,EAAiB;AACpBC,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,KAArB;AACH,OAtBL;AAuBH,KAxBD,MAwBO;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAY,mCAAZ;AACH;AACJ,GA5BD;;AA8BA,QAAMC,QAAQ,GAAIC,KAAD,IAAW;AACxBA,IAAAA,KAAK,CAACC,cAAN;AACAb,IAAAA,QAAQ;AACRV,IAAAA,gBAAgB,CAAC,IAAD,CAAhB;AACH,GAJD;;AAMA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAM,IAAA,QAAQ,EAAEqB,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,MAAD;AACI,IAAA,MAAM,EAAElB,MADZ;AAEI,IAAA,OAAO,EAAEF,OAFb;AAGI,IAAA,KAAK,EAAEN,OAHX;AAII,IAAA,WAAW,EAAC,gBAJhB;AAKI,IAAA,QAAQ,EAAEc,aALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAQI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,YAAY,EAAElB,SAFlB;AAGI,IAAA,QAAQ,EAAGiC,CAAD,IAAOhC,YAAY,CAACgC,CAAC,CAACC,MAAF,CAASb,KAAV,CAHjC;AAII,IAAA,UAAU,EAAE;AAAEc,MAAAA,GAAG,EAAE,YAAP;AAAqBC,MAAAA,GAAG,EAAE;AAA1B,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARJ,eAcI,oBAAC,SAAD;AACI,IAAA,IAAI,EAAC,MADT;AAEI,IAAA,YAAY,EAAElC,OAFlB;AAGI,IAAA,QAAQ,EAAG+B,CAAD,IAAO9B,UAAU,CAAC8B,CAAC,CAACC,MAAF,CAASb,KAAV,CAH/B;AAII,IAAA,UAAU,EAAE;AAAEc,MAAAA,GAAG,EAAEnC,SAAP;AAAkBoC,MAAAA,GAAG,EAAE;AAAvB,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdJ,eAoBI;AAAQ,IAAA,KAAK,EAAE;AAACnB,MAAAA,KAAK,EAAE;AAAR,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cApBJ,CADJ,EAuBKT,aAAa,iBAAM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAA8BF,OAA9B,kBAvBxB,CADJ;AA2BH","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { TextField } from \"@material-ui/core\";\nimport Select from \"react-select\";\nimport countryList from \"react-select-country-list\";\n\nexport default function Planner() {\n    const [startDate, setStartDate] = useState(null);\n    const [endDate, setEndDate] = useState(null);\n    const [country, setCountry] = useState(null);\n    const [holiday, setHolidays] = useState(\"\");\n    const [displayResult, setDisplayResult] = useState(false);\n\n    const options = countryList().getData();\n\n    const select = {\n        option: (provided) => ({\n            ...provided,\n            padding: 20,\n        }),\n        control: () => ({\n            width: 263,\n        }),\n    };\n\n    const changeHandler = (country) => {\n        setCountry(country);\n    };\n\n    const sendData = () => {\n        if (startDate && endDate && country) {\n            axios\n                .post(\n                    \"http://localhost:8080/api/dates?startDate=\" +\n                    startDate +\n                    \"&endDate=\" +\n                    endDate +\n                    \"&country=\" +\n                    country.value,\n                    {\n                        headers: {\n                            \"Access-Control-Allow-Origin\": \"*\",\n                            \"Access-Control-Allow-Methods\": \"*\",\n                            \"Access-Control-Allow-Headers\": \"*\",\n                            \"Content-Type\": \"application/text\",\n                        },\n                    }\n                )\n                .then((response) => {\n                    setHolidays(response.data);\n                })\n                .catch(function (error) {\n                    console.log(\"error\", error);\n                });\n        } else {\n            console.log(\"Some required params are missing!\");\n        }\n    };\n\n    const onSubmit = (event) => {\n        event.preventDefault();\n        sendData();\n        setDisplayResult(true);\n    };\n\n    return (\n        <div>\n            <form onSubmit={onSubmit}>\n                <Select\n                    styles={select}\n                    options={options}\n                    value={country}\n                    placeholder=\"Select Country\"\n                    onChange={changeHandler}\n                />\n                <TextField\n                    type=\"date\"\n                    defaultValue={startDate}\n                    onChange={(e) => setStartDate(e.target.value)}\n                    inputProps={{ min: \"2020-04-01\", max: \"2021-03-31\" }}\n                />\n                <TextField\n                    type=\"date\"\n                    defaultValue={endDate}\n                    onChange={(e) => setEndDate(e.target.value)}\n                    inputProps={{ min: startDate, max: \"2021-03-31\" }}\n                />\n                <button style={{width: 150}}>Submit</button>\n            </form>\n            {displayResult && ( <span>The person should take {holiday} holiday days</span> )}\n        </div>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}